/*
Write a program to find the highest average in a 2D array. If the average turns out to be an decimal number round up to it's nearest whole number.

Eg:1
Input:
[["Alpha", 92],
["Charlie", 95],
["Bravo", 98],
["Charlie", 96],
["Tango", 90]]
Output: 98

*/


package demo;
import java.util.*;

public class p2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);

		Map<String,List<Integer>> mp=new HashMap<String,List<Integer> >();

		

		String [][]s=new String[5][5];
		
		int sum=0;
		int avg=0;
		int res=0;

		s[0][0]="rudra";
		s[0][1]="95";

		s[1][0]="rudra";
		s[1][1]="94";

		s[2][0]="dev";
		s[2][1]="95";

		s[3][0]="rudra";
		s[3][1]="98";


		s[4][0]="dev";
		s[4][1]="100";

	
		
		
	
		for(int i=0;i<5;i++)
		{
			if(!mp.containsKey(s[i][0]))
			{
				String temp=s[i][1];
				int v=Integer.parseInt(temp);
				
				List<Integer> l=new ArrayList<Integer>();
				l.add(v);
				
				mp.put(s[i][0], l);
			}
			else
			{
				String temp=s[i][1];
				int v=Integer.parseInt(temp);
				
				List<Integer> l=mp.get(s[i][0]);
				l.add(v);
				mp.put(s[i][0], l);

			}
		} 
		
		for(Map.Entry<String,List<Integer>> i:mp.entrySet())
		{
			for(int j=0;j<i.getValue().size();j++)
			{
				sum+=i.getValue().get(j);
			}
			avg=sum/i.getValue().size();
			sum=0;
			
			res=Math.max(res,avg);
		}
		
		System.out.println(res);

	}

}
